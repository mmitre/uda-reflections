-- When would you want to use a remote repository rather than keeping all your work local?
When working with other people, when hosting in a system (like Google Cloud) that automatically gets information from GitHub, or when trying to have a backup of your work.

-- Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
Automatic updates would not allow for a stable environment for development. Also, if someone pushes half-baked changes, I don't want those to make it to my computer automatically.

-- Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forks are copies of a repository in GitHub. Allows basing a new repository on an existing one. Links to the original.
Branches allow making changes independently from others and merging when the changes are stable. Flags merge conflicts.
Clones are copies of a repository (for example, of a GitHub repository in a local machine).

-- What is the benefit of having a copy of the last known state of the remote stored locally?
Being able to see changes made before merging. Being able to see how changes to both branches will interact before pushing to GitHub.

-- How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Mostly over email, letting people know when a file (e.g. in a drop box) has been changed.

-- When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
When collaborating, you want to make changes to a branch to get it reviewed and make sure that it doesn't break the master. A bit less efficient because you have to go through some extra hoops before the changes are applied.